.clearfix{
    clear: both;
}
.wrapper-1{
    display: grid;
    grid-template-columns: 100px 200px 100px;
    /*1st-3rd column will be 100 px wide but not responsive*/
    /*2nd column will be 200 px wide but not responsive*/
    grid-template-rows: 50px 100px ;
    /*1st(odd) row will be 50 px wide but not responsive*/
    /*2nd(even) row will be 100 px wide but not responsive*/

}
.wrapper-1 div{
    background: burlywood;
    padding: 1em;
}
.wrapper-1 div:nth-child(odd){
    background:rgb(173, 255, 79)
}
.wrapper-2{
    display: grid;
    grid-template-columns: 30% 40% 30%;
    grid-template-rows: 4fr 1fr;
/*we really dont use % as it cause problems with margins as you can see*/
    box-sizing: border-box;
    grid-column-gap: 1em;
    grid-row-gap: 1em;
    /*short hand for above code
    grid-gap: 1em;
    */
    justify-items: start;
    /*sets each grid item to the start of there column
    other values suppourted by justify-item
        justify-item:end;
        justify-item:center;
        justify-item:strech(defult);
    */
    align-items: start;
    /*sets each grid item to the start of there rows
    other values suppourted by align-item
        align-item:end;
        align-item:center;
        align-item:strech(defult);
    */
}
.wrapper-2 .object-1{
    justify-self: end;
    /*sets perticular grid item to the end of there column
    other values suppourted by justify-self
        justify-self:start;
        justify-self:center;
        justify-self:strech(defult);
    */
    align-self: end;
        /*sets perticular grid item to the end of there row
    other values suppourted by justify-self
        align-self:start;
        align-self:center;
        align-self:strech(defult);
    */
}
.wrapper-2 .object-2{
    justify-self: center;
    align-self: center;
}
.wrapper-2 .object-3{
    align-self: start;
}
.wrapper-2 .object-4{
    justify-self: stretch;
    align-self: stretch;
}
.wrapper-2 div{
    background: rgb(250, 237, 49);
    padding: 1em;
}
.wrapper-2 div:nth-child(odd){
    background:rgb(51, 248, 255)
}
.wrapper-3{
    display: grid;
    grid-template-columns: repeat(3,1fr);
    /*the above property is same as
    grid-template-columns: 1fr 1fr 1fr;
    in grid we use fr as it gives reponsivness to grid
    */
    grid-gap: 1em;
    grid-auto-rows: 100px;
    /*it is used to set the height of each row of grid
    since the content of the single div is greater than height it will overflow
    to solve this problem*/
    grid-auto-rows: minmax(100px,auto);
    /*minmax(minimum_hieght,maximum_height);*/
}

.wrapper-3 .nested-box{
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 1em;
}

.wrapper-3 .box-1{
    grid-column: 1/3;
}
.wrapper-3 .box-2{
    grid-column: 3/4;
    grid-row: 1/3;
}

.wrapper-3 .box-4{
    grid-column: 1/2;
    grid-row: 2/3;
}
.wrapper-3 .box-7{
    grid-column: 1/2;
    grid-row: 4;
}
.wrapper-3 .nested-box>div{
    background: black;
    color: aliceblue;
}
.wrapper-3 .nested-box>div:nth-child(odd){
    background:white;
    color: black;
}
.wrapper-3 div{
    margin-top: 1em;
    background: rgb(253, 136, 247);
    padding: 1em;
}
.wrapper-3 div:nth-child(odd){
    background:rgb(253, 222, 174)
}